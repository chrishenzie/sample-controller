/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
	samplecontrollerv1alpha1 "k8s.io/sample-controller/pkg/apis/samplecontroller/v1alpha1"
)

// TaskClusterLister helps list TaskClusters.
// All objects returned here must be treated as read-only.
type TaskClusterLister interface {
	// List lists all TaskClusters in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*samplecontrollerv1alpha1.TaskCluster, err error)
	// TaskClusters returns an object that can list and get TaskClusters.
	TaskClusters(namespace string) TaskClusterNamespaceLister
	TaskClusterListerExpansion
}

// taskClusterLister implements the TaskClusterLister interface.
type taskClusterLister struct {
	listers.ResourceIndexer[*samplecontrollerv1alpha1.TaskCluster]
}

// NewTaskClusterLister returns a new TaskClusterLister.
func NewTaskClusterLister(indexer cache.Indexer) TaskClusterLister {
	return &taskClusterLister{listers.New[*samplecontrollerv1alpha1.TaskCluster](indexer, samplecontrollerv1alpha1.Resource("taskcluster"))}
}

// TaskClusters returns an object that can list and get TaskClusters.
func (s *taskClusterLister) TaskClusters(namespace string) TaskClusterNamespaceLister {
	return taskClusterNamespaceLister{listers.NewNamespaced[*samplecontrollerv1alpha1.TaskCluster](s.ResourceIndexer, namespace)}
}

// TaskClusterNamespaceLister helps list and get TaskClusters.
// All objects returned here must be treated as read-only.
type TaskClusterNamespaceLister interface {
	// List lists all TaskClusters in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*samplecontrollerv1alpha1.TaskCluster, err error)
	// Get retrieves the TaskCluster from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*samplecontrollerv1alpha1.TaskCluster, error)
	TaskClusterNamespaceListerExpansion
}

// taskClusterNamespaceLister implements the TaskClusterNamespaceLister
// interface.
type taskClusterNamespaceLister struct {
	listers.ResourceIndexer[*samplecontrollerv1alpha1.TaskCluster]
}
